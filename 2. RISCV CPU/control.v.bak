module control(addr, PCSel, ImmSel, RegWEn, BrUn, BrEq, BrLT, BSel, ASel, ALUSel, MemRW, WBSel);
parameter datawidth=20;
parameter addrwidth=6;
reg	[datawidth-1:0]data;
input		[addrwidth-1:0]addr;
input BrEq, BrLT;
output [2:0] ImmSel;
output [1:0] WBSel;
output [3:0] ALUSel;
output PCSel, RegWEn, BrUn, BSel, ASel, MemRW ;
assign {PCSel, ImmSel, RegWEn, BrUn, BrEq, BrLT, ASel, BSel, ALUSel, MemRW, WBSel} = data;

always@(addr)
begin
	case(addr)
	// R type
		6'd0 : data=20'b0_000_1_0_0_0_0000_0_00_000_01;
		6'd1 : data=20'b0_000_1_0_0_0_0001_0_00_000_01;
		6'd2 : data=20'b0_000_1_0_0_0_0010_0_00_000_01;
		6'd3 : data=20'b0_000_1_0_0_0_0011_0_00_000_01;
		6'd4 : data=20'b0_000_1_0_0_0_0100_0_00_000_01;
		6'd5 : data=20'b0_000_1_0_0_0_0101_0_00_000_01;
		6'd6 : data=20'b0_000_1_0_0_0_0110_0_00_000_01;
		6'd7 : data=20'b0_000_1_0_0_0_0111_0_00_000_01;
		6'd8 : data=20'b0_000_1_0_0_0_1000_0_00_000_01;
		6'd9 : data=20'b0_000_1_0_0_0_1001_0_00_000_01;
	// I type
		6'd10 : data=20'b0_000_1_0_0_1_0000_1_00_000_01;
		6'd11 : data=20'b0_000_1_0_0_1_0011_0_00_000_01;
		6'd12 : data=20'b0_000_1_0_0_1_0100_0_00_000_01;
		6'd13 : data=20'b0_000_1_0_0_1_0101_0_00_000_01;
		6'd14 : data=20'b0_000_1_0_0_1_1000_0_00_000_01;
		6'd15 : data=20'b0_000_1_0_0_1_1001_0_00_000_01;
		6'd16 : data=20'b0_000_1_0_0_1_0010_0_00_000_01;
		6'd17 : data=20'b0_000_1_0_0_1_0110_0_00_000_01;
		6'd18 : data=20'b0_000_1_0_0_1_0111_0_00_000_01;

		6'd19 : data=20'b0_000_1_0_0_1_0001_0_00_000_00;
		6'd20 : data=20'b0_000_1_0_0_1_1010_0_00_000_00;
		6'd21 : data=20'b0_000_1_0_0_1_1011_0_00_000_00;
		6'd22 : data=20'b0_000_1_0_0_1_1100_0_00_000_00;
		6'd23 : data=20'b0_000_1_0_0_1_1101_0_00_000_00;
	// S type
		6'd24 : data=20'b0_001_0_0_0_1_1101_1_00_000_00;
		6'd25 : data=20'b0_001_0_0_0_1_1111_1_00_000_00;
		6'd26 : data=20'b0_001_0_0_0_1_1011_1_00_000_00;
	// B type
		6'd27 : data=20'b1_010_0_1_1_1_0000_0_00_000_01;
		6'd28 : data=20'b1_010_0_1_1_1_0001_0_00_000_01;
		6'd29 : data=20'b1_010_0_1_1_1_0010_0_00_000_01;
		6'd30 : data=20'b1_010_0_1_1_1_0011_0_00_000_01;
		6'd31 : data=20'b1_010_0_0_1_1_0100_0_00_000_01;
		6'd32 : data=20'b1_010_0_0_1_1_0101_0_00_000_01;
	// U type
		6'd33 : data=20'b0_011_1_0_0_1_1010_0_00_000_01;
		6'd34 : data=20'b0_011_1_0_1_1_0000_0_00_000_01;

	// J type
		6'd35 : data=20'b1_100_1_0_1_1_0000_0_00_000_10;
		6'd36 : data=20'b1_100_1_0_0_1_0000_0_00_000_10;

endcase
end
endmodule
